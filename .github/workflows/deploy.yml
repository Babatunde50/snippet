name: Build, Push, and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      deploy:
        description: "Deploy to Railway"
        required: true
        default: "true"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_snippetbox
          MYSQL_USER: test_web
          MYSQL_PASSWORD: pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -proot" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.2"
          cache: true

      - name: Verify dependencies
        run: go mod verify

      # Initialize test database
      - name: Set up test database
        run: |
          mysql -h 127.0.0.1 -u root -proot -e "CREATE DATABASE IF NOT EXISTS test_snippetbox;"
          mysql -h 127.0.0.1 -u root -proot -e "CREATE USER IF NOT EXISTS 'test_web'@'%' IDENTIFIED BY 'pass';"
          mysql -h 127.0.0.1 -u root -proot -e "GRANT ALL PRIVILEGES ON test_snippetbox.* TO 'test_web'@'%';"
          mysql -h 127.0.0.1 -u root -proot -e "FLUSH PRIVILEGES;"

      # Run the tests
      - name: Run tests
        run: go test -v ./...
        env:
          # Make sure the test connection uses the right host
          MYSQL_HOST: 127.0.0.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "arm64,amd64"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: babatundeola/snippetbox
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{date 'YYYYMMDD'}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          railway variables set DSN="${{ secrets.RAILWAY_DATABASE_URL }}"
          railway up --service snippetbox --detach
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          USE_PROXY: true
